include:
  - project: "{{ project_path }}"
    ref: "{{ branch }}"
    file:
      - ci/ci_docker_build.yml
      - ci/ci_variables.yml
      - ci/kubectl_handler.yml

variables: &global_var
  extends: .global_vars

stages:
  - build-debug-image
  - pull-debug
  - push-image
  - deploy

.{{ service }}_auto_rules:
  rules:
    - changes:
        {{ autorules }}
      when: always

.{{ service }}_manual_rules:
  rules:
    - if: "$CI_COMMIT_MESSAGE =~ /{{ service }}-manual/"
      when: always

auto_{{ service }}_debug:
  stage: build-debug-image
  variables:
    <<: *global_var
    BUILD_CONTEXT: {{ build_context }}
    IMAGE_NAME: {{ service }}
  extends:
    - .{{ service }}_auto_rules
    - .build_image

manual_{{ service }}_debug:
  stage: build-debug-image
  variables:
    <<: *global_var
    BUILD_CONTEXT: {{ build_context }}
    IMAGE_NAME: {{ service }}
  extends:
    - .{{ service }}_manual_rules
    - .build_image

pull_auto_{{ service }}_sha:
  stage: pull-debug
  variables:
    <<: *global_var
    IMAGE_NAME: {{ service }}
  extends:
    - .{{ service }}_auto_rules
    - .pull_debug_commit_sha
  needs:
    - job: auto_{{ service }}_debug
      optional: true

pull_manual_{{ service }}_sha:
  stage: pull-debug
  variables:
    <<: *global_var
    IMAGE_NAME: {{ service }}
  extends:
    - .{{ service }}_manual_rules
    - .pull_debug_commit_sha
  needs:
    - job: manual_{{ service }}_debug
      optional: true

push_{{ service }}_image:
  stage: push-image
  variables:
    <<: *global_var
    IMAGE_NAME: {{ service }}
  extends:
    - .deploy_latest_tag_to_registry
    - .deploy_branch_tag_to_registry
  rules:
    - !reference [ ".{{ service }}_auto_rules", "rules" ]
    - !reference [ ".{{ service }}_manual_rules", "rules" ]
  needs:
    - job: pull_manual_{{ service }}_sha
      optional: true
    - job: pull_auto_{{ service }}_sha
      optional: true

manual_deploy_latest_image:
  before_script:
    - ""
  stage: push-image
  variables:
    <<: *global_var
    IMAGE_NAME: {{ service }}
  image:
    name: bitnami/kubectl:latest
    entrypoint: [ "" ]
  extends:
    - .kubectl-handler
  script:
    - 'kubectl set image deployment/{{ service }} {{ service }}=$DEV_TAG'
  environment:
    name: {{ environment_name }}
    url: {{ environment_url }}
  needs:
    - job: push_{{ service }}_image
      optional: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  when: manual

auto_deploy_stage_{{ service }}:
  before_script:
    - ""
  stage: deploy
  variables:
    <<: *global_var
  image:
    name: bitnami/kubectl:latest
    entrypoint: [ "" ]
  extends:
    - .kubectl-handler
  script:
    - kubectl apply -f kubernetes/{{ service }}-stage-deployment.yaml
    - kubectl apply -f kubernetes/{{ service }}-stage-service.yaml
  rules:
    - changes:
        - kubernetes/{{ service }}-stage-deployment.yaml
        - kubernetes/{{ service }}-stage-service.yaml
      when: always
    - if: '$CI_COMMIT_BRANCH == "stage"'
  environment:
    name: {{ environment_name }}
    url: {{ environment_url }}

manual_deploy_production_{{ service }}:
  before_script:
    - ""
  stage: deploy
  variables:
    <<: *global_var
  image:
    name: bitnami/kubectl:latest
    entrypoint: [ "" ]
  extends:
    - .kubectl-handler
  script:
    - kubectl apply -f kubernetes/{{ service }}-prod-deployment.yaml
    - kubectl apply -f kubernetes/{{ service }}-prod-service.yaml
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  environment:
    name: {{ environment_name }}
    url: {{ environment_url }}
  when: manual
